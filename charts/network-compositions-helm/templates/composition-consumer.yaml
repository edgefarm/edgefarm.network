## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 08:01:11 on 05-25-2023.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    streams.network.edgefarm.io/provider: provider-nats
    {{- include "network-compositions.labels" . | nindent 4 }}
  name: xconsumer.streams.network.edgefarm.io
spec:
  compositeTypeRef:
    apiVersion: streams.network.edgefarm.io/v1alpha1
    kind: XConsumer
  patchSets:
  - name: Name
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: Common
    patches:
    - fromFieldPath: metadata.labels['crossplane.io/claim-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-name']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-namespace']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/composite']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/composite']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['external-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['external-name']
      type: FromCompositeFieldPath
  - name: Parameters
    patches:
    - fromFieldPath: spec.deletionPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.deletionPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.ackPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.ackPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.ackWait
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.ackWait
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.backoff
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.backoff
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.deliverPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.deliverPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.description
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.description
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.filterSubject
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.filterSubject
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.inactiveThreshold
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.inactiveThreshold
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxAckPending
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxAckPending
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxDeliver
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxDeliver
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.memStorage
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.memStorage
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.numReplicas
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.numReplicas
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.optStartSeq
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.optStartSeq
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.optStartTime
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.optStartTime
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.pull.maxBatch
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.pull.maxBatch
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.pull.maxBytes
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.pull.maxBytes
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.pull.maxExpires
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.pull.maxExpires
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.pull.maxWaiting
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.pull.maxWaiting
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.push.deliverGroup
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.push.deliverGroup
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.push.deliverSubject
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.push.deliverSubject
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.push.flowControl
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.push.flowControl
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.push.headersOnly
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.push.headersOnly
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.push.idleHeartbeat
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.push.idleHeartbeat
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.push.rateLimitBps
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.push.rateLimitBps
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.replayPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.replayPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.sampleFreq
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.sampleFreq
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domain
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domain
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.stream
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.stream
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolve
      type: FromCompositeFieldPath
  - name: Labels
    patches: []
  resources:
  - base:
      apiVersion: nats.crossplane.io/v1alpha1
      kind: Consumer
      metadata: {}
      spec:
        forProvider: {}
        providerConfigRef:
          name: default
    name: Consumer
    patches:
    - patchSetName: Name
      type: PatchSet
    - patchSetName: Common
      type: PatchSet
    - patchSetName: Parameters
      type: PatchSet
    - patchSetName: Labels
      type: PatchSet
    - fromFieldPath: status.atProvider.state.ackFloor.consumerSeq
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.ackFloor.consumerSeq
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.ackFloor.lastActive
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.ackFloor.lastActive
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.ackFloor.streamSeq
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.ackFloor.streamSeq
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.cluster.leader
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.cluster.leader
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.cluster.name
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.cluster.name
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.cluster.replicas
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.cluster.replicas
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.created
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.created
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.delivered.consumerSeq
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.delivered.consumerSeq
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.delivered.lastActive
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.delivered.lastActive
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.delivered.streamSeq
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.delivered.streamSeq
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.domain
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.domain
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.durableName
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.durableName
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.name
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.name
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.numAckPending
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.numAckPending
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.numPending
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.numPending
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.numRedelivered
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.numRedelivered
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.numWaiting
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.numWaiting
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.pushBound
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.pushBound
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.streamName
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.streamName
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
      policy:
        fromFieldPath: Optional
      toFieldPath: status.uid
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      policy:
        fromFieldPath: Optional
      toFieldPath: status.observed.conditions
      type: ToCompositeFieldPath

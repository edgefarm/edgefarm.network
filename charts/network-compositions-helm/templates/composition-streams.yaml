## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 21:03:27 on 05-08-2023.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    streams.network.edgefarm.io/provider: provider-nats
    {{- include "network-compositions.labels" . | nindent 4 }}
  name: xstreams.streams.network.edgefarm.io
spec:
  compositeTypeRef:
    apiVersion: streams.network.edgefarm.io/v1alpha1
    kind: XStream
  patchSets:
  - name: Name
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: Common
    patches:
    - fromFieldPath: metadata.labels['crossplane.io/claim-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-name']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-namespace']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/composite']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/composite']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['external-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['external-name']
      type: FromCompositeFieldPath
  - name: Parameters
    patches:
    - fromFieldPath: spec.deletionPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.deletionPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.allowDirect
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.allowDirect
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.allowRollup
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.allowRollup
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.denyDelete
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.denyDelete
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.denyPurge
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.denyPurge
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.description
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.description
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.discard
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.discard
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.discardNewPerSubject
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.discardNewPerSubject
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.duplicates
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.duplicates
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxAge
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxAge
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxBytes
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxBytes
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxConsumers
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxConsumers
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxMsgSize
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxMsgSize
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxMsgs
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxMsgs
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.maxMsgsPerSubject
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.maxMsgsPerSubject
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.domain
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.domain
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.external.apiPrefix
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.external.apiPrefix
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.external.deliverPrefix
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.external.deliverPrefix
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.filterSubject
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.filterSubject
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.startSeq
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.startSeq
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirror.startTime
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirror.startTime
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.mirrorDirect
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.mirrorDirect
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.noAck
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.noAck
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.placement.cluster
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.placement.cluster
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.placement.tags
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.placement.tags
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.rePublish.destination
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.rePublish.destination
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.rePublish.headersOnly
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.rePublish.headersOnly
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.rePublish.source
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.rePublish.source
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.replicas
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.replicas
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.retention
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.retention
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.sealed
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.sealed
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.sources
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.sources
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.storage
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.storage
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.subjects
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.subjects
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.config.template
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.config.template
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.domain
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.domain
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolve
      type: FromCompositeFieldPath
  - name: Labels
    patches: []
  resources:
  - base:
      apiVersion: nats.crossplane.io/v1alpha1
      kind: Stream
      metadata: {}
      spec:
        forProvider: {}
        providerConfigRef:
          name: default
    name: Stream
    patches:
    - patchSetName: Name
      type: PatchSet
    - patchSetName: Common
      type: PatchSet
    - patchSetName: Parameters
      type: PatchSet
    - patchSetName: Labels
      type: PatchSet
    - fromFieldPath: status.atProvider.clusterInfo.leader
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.clusterInfo.leader
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.clusterInfo.name
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.clusterInfo.name
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.clusterInfo.replicas
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.clusterInfo.replicas
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.connection.accountPublicKey
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.connection.accountPublicKey
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.connection.address
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.connection.address
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.connection.userPublicKey
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.connection.userPublicKey
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.domain
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.domain
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.bytes
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.bytes
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.consumerCount
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.consumerCount
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.deleted
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.deleted
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.firstSequence
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.firstSequence
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.firstTimestamp
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.firstTimestamp
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.lastSequence
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.lastSequence
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.lastTimestamp
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.lastTimestamp
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.messages
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.messages
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.numDeleted
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.numDeleted
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.numSubjects
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.numSubjects
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.state.subjects
      policy:
        fromFieldPath: Optional
      toFieldPath: status.atProvider.state.subjects
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
      policy:
        fromFieldPath: Optional
      toFieldPath: status.uid
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      policy:
        fromFieldPath: Optional
      toFieldPath: status.observed.conditions
      type: ToCompositeFieldPath

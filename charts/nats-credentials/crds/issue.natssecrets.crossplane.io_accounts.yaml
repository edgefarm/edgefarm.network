---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: accounts.issue.natssecrets.crossplane.io
spec:
  group: issue.natssecrets.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - natssecrets
    kind: Account
    listKind: AccountList
    plural: accounts
    singular: account
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.atProvider.operator
      name: OPERATOR
      type: string
    - jsonPath: .status.atProvider.nkey
      name: NKEY
      priority: 1
      type: string
    - jsonPath: .status.atProvider.jwt
      name: JWT
      priority: 1
      type: string
    - jsonPath: .status.atProvider.pushed
      name: PUSHED
      priority: 1
      type: string
    - jsonPath: .status.atProvider.lastPushed
      name: LAST PUSHED
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Account is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A AccountSpec defines the desired state of a Account.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: AccountParameters are the configurable fields of a Account.
                properties:
                  claims:
                    description: Specifies claims of the JWT
                    properties:
                      account:
                        description: Account specific claims
                        properties:
                          defaultPermissions:
                            description: Default pub/sub permissions for this account
                              that users inherit
                            properties:
                              pub:
                                description: Specifies the publish permissions
                                properties:
                                  allow:
                                    description: Specifies allowed subjects
                                    items:
                                      type: string
                                    type: array
                                  deny:
                                    description: Specifies denied subjects
                                    items:
                                      type: string
                                    type: array
                                type: object
                              resp:
                                description: Specifies the response permissions
                                properties:
                                  max:
                                    description: The maximum number of messages
                                    type: integer
                                  ttl:
                                    description: Specifies the time to live for the
                                      response
                                    type: string
                                required:
                                - max
                                - ttl
                                type: object
                              sub:
                                description: Specifies the subscribe permissions
                                properties:
                                  allow:
                                    description: Specifies allowed subjects
                                    items:
                                      type: string
                                    type: array
                                  deny:
                                    description: Specifies denied subjects
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          description:
                            description: A human readable description
                            type: string
                          exports:
                            description: A list of account/subject combinations that
                              this account is allowed to export
                            items:
                              description: Export describes a mapping from this account
                                to another one
                              properties:
                                accountTokenPosition:
                                  description: The account token position for the
                                    export
                                  type: integer
                                advertise:
                                  description: Specifies if the export is advertised
                                  type: boolean
                                description:
                                  description: A human readable description
                                  type: string
                                infoURL:
                                  description: This is a URL to more information
                                  type: string
                                name:
                                  description: The name of the export
                                  type: string
                                responseThreshold:
                                  description: The response threshold for the export
                                  type: string
                                responseType:
                                  description: The response type for the export
                                  type: string
                                revocations:
                                  additionalProperties:
                                    format: int64
                                    type: integer
                                  description: The revocations for the export
                                  type: object
                                serviceLatency:
                                  description: The latency for the export.
                                  properties:
                                    results:
                                      description: Specifies the results for the latency
                                      type: string
                                    sampling:
                                      description: Specifies the sampling for the
                                        latency
                                      type: integer
                                  required:
                                  - results
                                  - sampling
                                  type: object
                                subject:
                                  description: The subject to export
                                  type: string
                                tokenReq:
                                  description: Specifies if a token is required for
                                    the export
                                  type: boolean
                                type:
                                  description: The type of the export
                                  type: string
                              type: object
                            type: array
                          imports:
                            description: A list of account/subject combinations that
                              this account is allowed to import
                            items:
                              description: Import describes a mapping from another
                                account into this one
                              properties:
                                account:
                                  description: The account to import from
                                  type: string
                                localSubject:
                                  description: The local subject to import to
                                  type: string
                                name:
                                  description: The name of the import
                                  type: string
                                share:
                                  description: Specifies if the import is shared
                                  type: boolean
                                subject:
                                  description: The subject to import
                                  type: string
                                token:
                                  description: The token to use for the import
                                  type: string
                                type:
                                  description: The type of the import
                                  type: string
                              type: object
                            type: array
                          infoURL:
                            description: This is a URL to more information
                            type: string
                          limits:
                            description: A set of limits for this account
                            properties:
                              conn:
                                description: Max number of connections
                                format: int64
                                type: integer
                              consumer:
                                description: Max number of consumers
                                format: int64
                                type: integer
                              data:
                                description: Specifies the maximum number of bytes
                                format: int64
                                type: integer
                              disallowBearer:
                                description: Specifies that user JWT can't be bearer
                                  token
                                type: boolean
                              diskMaxStreamBytes:
                                default: 0
                                description: Max number of bytes a stream can have
                                  on disk. (0 means unlimited)
                                format: int64
                                type: integer
                              diskStorage:
                                description: Max number of bytes stored on disk across
                                  all streams. (0 means disabled)
                                format: int64
                                type: integer
                              exports:
                                description: Max number of exports
                                format: int64
                                type: integer
                              imports:
                                description: Max number of imports
                                format: int64
                                type: integer
                              leafNodeConn:
                                description: Max number of leaf node connections
                                format: int64
                                type: integer
                              maxAckPending:
                                description: Max number of acks pending
                                format: int64
                                type: integer
                              maxBytesRequired:
                                description: Max bytes required by all Streams
                                type: boolean
                              memMaxStreamBytes:
                                default: 0
                                description: Max number of bytes a stream can have
                                  in memory. (0 means unlimited)
                                format: int64
                                type: integer
                              memStorage:
                                description: Max number of bytes stored in memory
                                  across all streams. (0 means disabled)
                                format: int64
                                type: integer
                              payload:
                                description: Specifies the maximum message payload
                                format: int64
                                type: integer
                              streams:
                                description: Max number of streams
                                format: int64
                                type: integer
                              subs:
                                description: Specifies the maximum number of subscriptions
                                format: int64
                                type: integer
                              wildcardExports:
                                description: Specifies if wildcards are allowed in
                                  exports
                                type: boolean
                            type: object
                          mappings:
                            additionalProperties:
                              items:
                                description: WeightedMapping is a mapping from one
                                  subject to another with a weight and a destination
                                  cluster
                                properties:
                                  cluster:
                                    description: The cluster to map to
                                    type: string
                                  subject:
                                    description: The subject to map to
                                    type: string
                                  weight:
                                    description: The amount of 100% that this mapping
                                      should be used
                                    type: integer
                                required:
                                - subject
                                type: object
                              type: array
                            description: Stores subjects that get mapped to other
                              subjects using a weighted mapping. For more information
                              see https://docs.nats.io/nats-concepts/subject_mapping
                            type: object
                          revocations:
                            additionalProperties:
                              format: int64
                              type: integer
                            description: Stores user JWTs that have been revoked and
                              the time they were revoked
                            type: object
                          signingKeys:
                            description: A list of signing keys the account can use
                            items:
                              type: string
                            type: array
                          tags:
                            description: Do not set manually
                            items:
                              type: string
                            type: array
                          type:
                            description: Do not set manually
                            type: string
                          version:
                            description: Do not set manually
                            type: integer
                        type: object
                      aud:
                        description: Do not set manually
                        type: string
                      exp:
                        description: Do not set manually
                        format: int64
                        type: integer
                      iat:
                        description: Do not set manually
                        format: int64
                        type: integer
                      iss:
                        description: Do not set manually
                        type: string
                      jti:
                        description: Do not set manually
                        type: string
                      name:
                        description: Do not set manually
                        type: string
                      nbf:
                        description: Do not set manually
                        format: int64
                        type: integer
                      sub:
                        description: Do not set manually
                        type: string
                    type: object
                  operator:
                    type: string
                  useSigningKey:
                    type: string
                required:
                - operator
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A AccountStatus represents the observed state of a Account.
            properties:
              atProvider:
                description: AccountObservation are the observable fields of a Account.
                properties:
                  account:
                    type: string
                  issue:
                    type: string
                  jwt:
                    type: string
                  jwtPath:
                    type: string
                  lastPushed:
                    type: string
                  nkey:
                    type: string
                  nkeyPath:
                    type: string
                  operator:
                    type: string
                  pushed:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 13:37:31 on 04-24-2023.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    streams.network.edgefarm.io/provider: provider-kubernetes
    {{- include "network-compositions.labels" . | nindent 4 }}
  name: xedgenetworks.streams.network.edgefarm.io
spec:
  compositeTypeRef:
    apiVersion: streams.network.edgefarm.io/v1alpha1
    kind: XEdgeNetwork
  patchSets:
    - name: Name
      patches:
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          type: FromCompositeFieldPath
    - name: Common
      patches:
        - fromFieldPath: metadata.labels['crossplane.io/claim-name']
          policy:
            fromFieldPath: Optional
          toFieldPath: metadata.labels['crossplane.io/claim-name']
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
          policy:
            fromFieldPath: Optional
          toFieldPath: metadata.labels['crossplane.io/claim-namespace']
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.labels['crossplane.io/composite']
          policy:
            fromFieldPath: Optional
          toFieldPath: metadata.labels['crossplane.io/composite']
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.labels['external-name']
          policy:
            fromFieldPath: Optional
          toFieldPath: metadata.labels['external-name']
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
          policy:
            fromFieldPath: Optional
          toFieldPath: metadata.namespace
          type: FromCompositeFieldPath
    - name: Parameters
      patches:
        - fromFieldPath: spec.connectionSecretRefs.sysAccountUserSecretRef.name
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.connectionSecretRefs.sysAccountUserSecretRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.connectionSecretRefs.systemUserSecretRef.name
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.connectionSecretRefs.systemUserSecretRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.limits.fileStorage
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.limits.fileStorage
          type: FromCompositeFieldPath
        - fromFieldPath: spec.limits.inMemoryStorage
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.limits.inMemoryStorage
          type: FromCompositeFieldPath
        - fromFieldPath: spec.network
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.network
          type: FromCompositeFieldPath
        - fromFieldPath: spec.nodepoolSelector.matchExpressions
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.nodepoolSelector.matchExpressions
          type: FromCompositeFieldPath
        - fromFieldPath: spec.nodepoolSelector.matchLabels
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.nodepoolSelector.matchLabels
          type: FromCompositeFieldPath
        - fromFieldPath: spec.subNetwork
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.subNetwork
          type: FromCompositeFieldPath
        - fromFieldPath: spec.tolerations
          policy:
            fromFieldPath: Optional
          toFieldPath: spec.forProvider.manifest.spec.tolerations
          type: FromCompositeFieldPath
    - name: Labels
      patches: []
  resources:
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata: {}
        spec:
          forProvider:
            manifest:
              apiVersion: network.edgefarm.io/v1alpha1
              kind: EdgeNetwork
              spec: {}
          providerConfigRef:
            name: provider-kubernetes
      name: EdgeNetwork
      patches:
        - patchSetName: Name
          type: PatchSet
        - patchSetName: Common
          type: PatchSet
        - patchSetName: Parameters
          type: PatchSet
        - patchSetName: Labels
          type: PatchSet
        - fromFieldPath: status.current
          policy:
            fromFieldPath: Optional
          toFieldPath: status.current
          type: ToCompositeFieldPath
        - fromFieldPath: status.desired
          policy:
            fromFieldPath: Optional
          toFieldPath: status.desired
          type: ToCompositeFieldPath
        - fromFieldPath: status.ready
          policy:
            fromFieldPath: Optional
          toFieldPath: status.ready
          type: ToCompositeFieldPath
        - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
          policy:
            fromFieldPath: Optional
          toFieldPath: status.uid
          type: ToCompositeFieldPath
        - fromFieldPath: status.conditions
          policy:
            fromFieldPath: Optional
          toFieldPath: status.observed.conditions
          type: ToCompositeFieldPath

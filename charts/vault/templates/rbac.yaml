kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{ .Values.vault.serviceAccount }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.vault.serviceAccount }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["bank-vaults"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["vault-unseal-keys"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: [""]
    verbs: ["create"]
  - apiGroups: ["v1"]
    resources: ["pods"]
    verbs: ["get", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.vault.serviceAccount }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
roleRef:
  kind: Role
  name: {{ .Values.vault.serviceAccount }}
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ .Values.vault.serviceAccount }}
---
# This binding allows the deployed Vault instance to authenticate clients
# through Kubernetes ServiceAccounts (if configured so).
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.vault.serviceAccount }}-auth-delegator
  labels:
    {{- include "vault.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: {{ .Values.vault.serviceAccount }}
    namespace: default

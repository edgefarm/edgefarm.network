---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: users.issue.natssecrets.crossplane.io
spec:
  group: issue.natssecrets.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - natssecrets
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.atProvider.operator
      name: OPERATOR
      type: string
    - jsonPath: .status.atProvider.account
      name: ACCOUNT
      type: string
    - jsonPath: .status.atProvider.nkey
      name: NKEY
      priority: 1
      type: string
    - jsonPath: .status.atProvider.jwt
      name: JWT
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A User is an example API type.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A UserSpec defines the desired state of a User.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: UserParameters are the configurable fields of a User.
                properties:
                  account:
                    type: string
                  claims:
                    description: Specifies claims of the JWT
                    properties:
                      aud:
                        description: Do not set manually
                        type: string
                      exp:
                        description: Do not set manually
                        format: int64
                        type: integer
                      iat:
                        description: Do not set manually
                        format: int64
                        type: integer
                      iss:
                        description: Do not set manually
                        type: string
                      jti:
                        description: Do not set manually
                        type: string
                      name:
                        description: Do not set manually
                        type: string
                      nbf:
                        description: Do not set manually
                        format: int64
                        type: integer
                      sub:
                        description: Do not set manually
                        type: string
                      user:
                        description: Specifies the user specific part of the JWT
                        properties:
                          allowedConnectionTypes:
                            description: Specifies the allowed connection types for
                              this user Allowed values are STANDARD, WEBSOCKET, LEAFNODE,
                              LEAFNODE_WS, MQTT, MQTT_WS
                            enum:
                            - STANDARD
                            - WEBSOCKET
                            - LEAFNODE
                            - LEAFNODE_WS
                            - MQTT
                            - MQTT_WS
                            items:
                              type: string
                            type: array
                          bearerToken:
                            description: Specifies if this user is allowed to use
                              a bearer token to connect
                            type: boolean
                          data:
                            description: Specifies the maximum number of bytes
                            format: int64
                            type: integer
                          issuerAccount:
                            description: The account that issued this user JWT
                            type: string
                          payload:
                            description: Specifies the maximum message payload
                            format: int64
                            type: integer
                          pub:
                            description: Specifies the publish permissions
                            properties:
                              allow:
                                description: Specifies allowed subjects
                                items:
                                  type: string
                                type: array
                              deny:
                                description: Specifies denied subjects
                                items:
                                  type: string
                                type: array
                            type: object
                          resp:
                            description: Specifies the response permissions
                            properties:
                              max:
                                description: The maximum number of messages
                                type: integer
                              ttl:
                                description: Specifies the time to live for the response
                                type: string
                            required:
                            - max
                            - ttl
                            type: object
                          src:
                            description: 'A list of CIDR specifications the user is
                              allowed to connect from Example: 192.168.1.0/24, 192.168.1.1/1
                              or 2001:db8:a0b:12f0::1/32'
                            items:
                              type: string
                            type: array
                          sub:
                            description: Specifies the subscribe permissions
                            properties:
                              allow:
                                description: Specifies allowed subjects
                                items:
                                  type: string
                                type: array
                              deny:
                                description: Specifies denied subjects
                                items:
                                  type: string
                                type: array
                            type: object
                          subs:
                            description: Specifies the maximum number of subscriptions
                            format: int64
                            type: integer
                          tags:
                            description: Do not set manually
                            items:
                              type: string
                            type: array
                          times:
                            description: Represents allowed time ranges the user is
                              allowed to interact with the system
                            items:
                              properties:
                                end:
                                  description: The end time in the format HH:MM:SS
                                  pattern: ^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9]:?[0-5][0-9]+$))
                                  type: string
                                start:
                                  description: The start time in the format HH:MM:SS
                                  pattern: ^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9]:?[0-5][0-9]+$))
                                  type: string
                              type: object
                            type: array
                          timesLocation:
                            description: The locale for the times in the format "Europe/Berlin"
                            type: string
                          type:
                            description: Do not set manually
                            type: string
                          version:
                            description: Do not set manually
                            type: integer
                        type: object
                    type: object
                  operator:
                    type: string
                  useSigningKey:
                    type: string
                required:
                - account
                - operator
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A UserStatus represents the observed state of a User.
            properties:
              atProvider:
                description: UserObservation are the observable fields of a User.
                properties:
                  account:
                    type: string
                  creds:
                    type: string
                  issue:
                    type: string
                  jwt:
                    type: string
                  jwtPath:
                    type: string
                  nkey:
                    type: string
                  nkeyPath:
                    type: string
                  operator:
                    type: string
                  user:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

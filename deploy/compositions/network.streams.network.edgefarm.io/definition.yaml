apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xnetworks.streams.network.edgefarm.io
spec:
  group: streams.network.edgefarm.io
  names:
    kind: XNetwork
    plural: xnetworks
    singular: xnetwork
  claimNames:
    kind: Network
    plural: networks
    singular: network
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            status:
              type: object
              description: >
                A Status represents the observed states
              properties:
                operator:
                  description: >
                    The operator for the NATS server
                  type: string
                sysAccount:
                  description: >
                    The sys account name for the NATS server
                  type: string
                system:
                  description: >
                    The UID of the secret user resource
                  type: string
                account:
                  description: >
                    The UID of the account resource
                  type: string
            spec:
              type: object
              properties:
                parameters:
                  type: object
                  properties:
                    subNetworks:
                      type: array
                      description: >
                        The subnetworks that are part of this network
                      items:
                        type: object
                        description: Configuration for the sub network
                        required:
                          - name
                          - limits
                        properties:
                          name:
                            type: string
                            description: The name of the sub network
                          limits:
                            description: Hardware limits for the sub network
                            properties:
                              fileStorage:
                                default: 1G
                                description:
                                  How much disk space is available for data that is
                                  stored on disk
                                pattern: ^\d+[GMKB]?$
                                type: string
                              inMemoryStorage:
                                default: 1G
                                description:
                                  How much memory is available for data that is stored
                                  in memory
                                pattern: ^\d+[GMKB]?$
                                type: string
                            required:
                              - fileStorage
                              - inMemoryStorage
                            type: object
                          nodepoolSelector:
                            description:
                              NodePoolSelector is a label query over nodepool that
                              should match the replica count. It must match the nodepool's labels.
                            properties:
                              matchExpressions:
                                description:
                                  matchExpressions is a list of label selector requirements.
                                  The requirements are ANDed.
                                items:
                                  description:
                                    A label selector requirement is a selector that
                                    contains values, a key, and an operator that relates the key
                                    and values.
                                  properties:
                                    key:
                                      description:
                                        key is the label key that the selector applies
                                        to.
                                      type: string
                                    operator:
                                      description:
                                        operator represents a key's relationship to
                                        a set of values. Valid operators are In, NotIn, Exists
                                        and DoesNotExist.
                                      type: string
                                    values:
                                      description:
                                        values is an array of string values. If the
                                        operator is In or NotIn, the values array must be non-empty.
                                        If the operator is Exists or DoesNotExist, the values
                                        array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description:
                                  matchLabels is a map of {key,value} pairs. A single
                                  {key,value} in the matchLabels map is equivalent to an element
                                  of matchExpressions, whose key field is "key", the operator
                                  is "In", and the values array contains only "value". The requirements
                                  are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          tolerations:
                            description:
                              Indicates the tolerations the pods under this pool have.
                              A pool's tolerations is not allowed to be updated.
                            items:
                              description:
                                The pod this Toleration is attached to tolerates any
                                taint that matches the triple <key,value,effect> using the matching
                                operator <operator>.
                              properties:
                                effect:
                                  description:
                                    Effect indicates the taint effect to match. Empty
                                    means match all taint effects. When specified, allowed values
                                    are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description:
                                    Key is the taint key that the toleration applies
                                    to. Empty means match all taint keys. If the key is empty,
                                    operator must be Exists; this combination means to match all
                                    values and all keys.
                                  type: string
                                operator:
                                  description:
                                    Operator represents a key's relationship to the
                                    value. Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod
                                    can tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description:
                                    TolerationSeconds represents the period of time
                                    the toleration (which must be of effect NoExecute, otherwise
                                    this field is ignored) tolerates the taint. By default, it
                                    is not set, which means tolerate the taint forever (do not
                                    evict). Zero and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description:
                                    Value is the taint value the toleration matches
                                    to. If the operator is Exists, the value should be empty,
                                    otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                    nats:
                      description: NATS config
                      type: object
                      required:
                        - operator
                        - address
                      properties:
                        operator:
                          description: The name of the operator the account is created for
                          type: string
                        address:
                          type: string
                          description: >
                            The address of the NATS server
                    users:
                      description: List of users to create
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            description: The name of the user
                            type: string
                          writeToSecret:
                            type: object
                            required:
                              - name
                            description: The secret to write the user credentials to
                            properties:
                              name:
                                description: The name of the secret
                                type: string
                          limits:
                            description: The limits for the user
                            type: object
                            properties:
                              subscriptions:
                                description: Specifies the maximum number of subscriptions
                                format: int64
                                type: integer

                              payload:
                                description: Specifies the maximum message payload
                                format: int64
                                type: integer

                              data:
                                description: Specifies the maximum number of bytes
                                format: int64
                                type: integer
                          permissions:
                            description: The pub/sub permissions for the user
                            type: object
                            properties:
                              sub:
                                description: Specifies the subscribe permissions
                                properties:
                                  allow:
                                    description: Specifies allowed subjects
                                    items:
                                      type: string
                                    type: array
                                  deny:
                                    description: Specifies denied subjects
                                    items:
                                      type: string
                                    type: array
                                type: object
                              pub:
                                description: Specifies the publish permissions
                                properties:
                                  allow:
                                    description: Specifies allowed subjects
                                    items:
                                      type: string
                                    type: array
                                  deny:
                                    description: Specifies denied subjects
                                    items:
                                      type: string
                                    type: array
                                type: object
                    consumers:
                      type: array
                      description: List of consumers
                      items:
                        type: object
                        description: Configuration for a consumer
                        properties:
                          name:
                            description: The name of the consumer
                            type: string
                          streamRef:
                            description: The name of the stream the consumer is created for
                            default: main
                            type: string
                          config:
                            description: Config is the consumer configuration.
                            properties:
                              ackPolicy:
                                default: Explicit
                                description:
                                  AckPolicy describes the requirement of client
                                  acknowledgements, either Explicit, None, or All. For more
                                  information see https://docs.nats.io/nats-concepts/jetstream/consumers#ackpolicy
                                enum:
                                  - Explicit
                                  - None
                                  - All
                                type: string
                              ackWait:
                                default: 30s
                                description:
                                  AckWait is the duration that the server will
                                  wait for an ack for any individual message once it has been
                                  delivered to a consumer. If an ack is not received in time,
                                  the message will be redelivered. Format is a string duration,
                                  e.g. 1h, 1m, 1s, 1h30m or 2h3m4s.
                                pattern: ([0-9]+h)?([0-9]+m)?([0-9]+s)?
                                type: string
                              backoff:
                                description:
                                  "Backoff is a list of time durations that represent
                                  the time to delay based on delivery count. Format of the
                                  durations is a string duration, e.g. 1h, 1m, 1s, 1h30m or
                                  2h3m4s where multiple durations are separated by commas.
                                  Example: `1s,2s,3s,4s,5s`."
                                pattern: ^(([0-9]+h)?([0-9]+m)?([0-9]+s)?)(?:,\s*(([0-9]+h)?([0-9]+m)?([0-9]+s)?))*$
                                type: string
                              deliverPolicy:
                                default: All
                                description:
                                  DeliverPolicy defines the point in the stream
                                  to receive messages from, either All, Last, New, ByStartSequence,
                                  ByStartTime, or LastPerSubject. Fore more information see
                                  https://docs.nats.io/jetstream/concepts/consumers#deliverpolicy
                                enum:
                                  - All
                                  - Last
                                  - New
                                  - ByStartSequence
                                  - ByStartTime
                                  - LastPerSubject
                                type: string
                              description:
                                description:
                                  Description is a human readable description of
                                  the consumer. This can be particularly useful for ephemeral
                                  consumers to indicate their purpose since the durable name
                                  cannot be provided.
                                type: string
                              filterSubject:
                                description:
                                  FilterSubject defines an overlapping subject
                                  with the subjects bound to the stream which will filter
                                  the set of messages received by the consumer.
                                type: string
                              inactiveThreshold:
                                description:
                                  InactiveThreshold defines the duration that instructs
                                  the server to cleanup consumers that are inactive for that
                                  long. Format is a string duration, e.g. 1h, 1m, 1s, 1h30m
                                  or 2h3m4s.
                                pattern: ([0-9]+h)?([0-9]+m)?([0-9]+s)?
                                type: string
                              maxAckPending:
                                default: 1000
                                description:
                                  MaxAckPending sets the number of outstanding
                                  acks that are allowed before message delivery is halted.
                                type: integer
                              maxDeliver:
                                default: -1
                                description:
                                  MaxDeliver is the maximum number of times a specific
                                  message delivery will be attempted. Applies to any message
                                  that is re-sent due to ack policy (i.e. due to a negative
                                  ack, or no ack sent by the client).
                                type: integer
                              memStorage:
                                description:
                                  MemoryStorage if set, forces the consumer state
                                  to be kept in memory rather than inherit the storage type
                                  of the stream (file in this case).
                                type: boolean
                              numReplicas:
                                default: 0
                                description:
                                  Replicas sets the number of replicas for the
                                  consumer's state. By default, when the value is set to zero,
                                  consumers inherit the number of replicas from the stream.
                                type: integer
                              optStartSeq:
                                description:
                                  OptStartSeq is an optional start sequence number
                                  and is used with the DeliverByStartSequence deliver policy.
                                format: int64
                                type: integer
                              optStartTime:
                                description:
                                  OptStartTime is an optional start time and is
                                  used with the DeliverByStartTime deliver policy. The time
                                  format is RFC 3339, e.g. 2023-01-09T14:48:32Z
                                pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
                                type: string
                              pull:
                                description:
                                  PullConsumer defines the pull-based consumer
                                  configuration.
                                properties:
                                  maxBatch:
                                    description:
                                      MaxRequestBatch defines th maximum batch
                                      size a single pull request can make. When set with MaxRequestMaxBytes,
                                      the batch size will be constrained by whichever limit
                                      is hit first. This is a pull consumer specific setting.
                                    type: integer
                                  maxBytes:
                                    description:
                                      MaxRequestMaxBytes defines the  maximum total
                                      bytes that can be requested in a given batch. When set
                                      with MaxRequestBatch, the batch size will be constrained
                                      by whichever limit is hit first. This is a pull consumer
                                      specific setting.
                                    type: integer
                                  maxExpires:
                                    description:
                                      MaxRequestExpires defines the maximum duration
                                      a single pull request will wait for messages to be available
                                      to pull. This is a pull consumer specific setting.
                                    pattern: ([0-9]+h)?([0-9]+m)?([0-9]+s)?
                                    type: string
                                  maxWaiting:
                                    default: 512
                                    description:
                                      MaxWaiting defines the maximum number of
                                      waiting pull requests. This is a pull consumer specific
                                      setting.
                                    type: integer
                                type: object
                              push:
                                description:
                                  PushConsumer defines the push-based consumer
                                  configuration.
                                properties:
                                  deliverGroup:
                                    description:
                                      DeliverGroup defines the queue group name
                                      which, if specified, is then used to distribute the
                                      messages between the subscribers to the consumer. This
                                      is analogous to a queue group in core NATS. See https://docs.nats.io/nats-concepts/core-nats/queue
                                      for more information on queue groups. This is a push
                                      consumer specific setting.
                                    type: string
                                  deliverSubject:
                                    description:
                                      DeliverSubject defines the subject to deliver
                                      messages to. Note, setting this field implicitly decides
                                      whether the consumer is push or pull-based. With a deliver
                                      subject, the server will push messages to client subscribed
                                      to this subject. This is a push consumer specific setting.
                                    type: string
                                  flowControl:
                                    description:
                                      FlowControl enables per-subscription flow
                                      control using a sliding-window protocol. This protocol
                                      relies on the server and client exchanging messages
                                      to regulate when and how many messages are pushed to
                                      the client. This one-to-one flow control mechanism works
                                      in tandem with the one-to-many flow control imposed
                                      by MaxAckPending across all subscriptions bound to a
                                      consumer. This is a push consumer specific setting.
                                    type: boolean
                                  headersOnly:
                                    description:
                                      HeadersOnly delivers, if set, only the headers
                                      of messages in the stream and not the bodies. Additionally
                                      adds Nats-Msg-Size header to indicate the size of the
                                      removed payload.
                                    type: boolean
                                  idleHeartbeat:
                                    description:
                                      IdleHeartbeat defines, if set, that the server
                                      will regularly send a status message to the client (i.e.
                                      when the period has elapsed) while there are no new
                                      messages to send. This lets the client know that the
                                      JetStream service is still up and running, even when
                                      there is no activity on the stream. The message status
                                      header will have a code of 100. Unlike FlowControl,
                                      it will have no reply to address. It may have a description
                                      such "Idle Heartbeat". Note that this heartbeat mechanism
                                      is all handled transparently by supported clients and
                                      does not need to be handled by the application. Format
                                      is a string duration, e.g. 1h, 1m, 1s, 1h30m or 2h3m4s.
                                      This is a push consumer specific setting.
                                    pattern: ([0-9]+h)?([0-9]+m)?([0-9]+s)?
                                    type: string
                                  rateLimitBps:
                                    description:
                                      RateLimit is used to throttle the delivery
                                      of messages to the consumer, in bits per second.
                                    format: int64
                                    type: integer
                                type: object
                              replayPolicy:
                                default: Instant
                                description:
                                  ReplayPolicy is used to define the mode of message
                                  replay. If the policy is Instant, the messages will be pushed
                                  to the client as fast as possible while adhering to the
                                  Ack Policy, Max Ack Pending and the client's ability to
                                  consume those messages. If the policy is Original, the messages
                                  in the stream will be pushed to the client at the same rate
                                  that they were originally received, simulating the original
                                  timing of messages.
                                enum:
                                  - Instant
                                  - Original
                                type: string
                              sampleFreq:
                                description:
                                  SampleFrequency sets the percentage of acknowledgements
                                  that should be sampled for observability.
                                pattern: ^([1-9][0-9]?|100)%?$
                                type: string
                            required:
                              - ackPolicy
                              - ackWait
                              - deliverPolicy
                              - numReplicas
                              - replayPolicy
                            type: object

                    streams:
                      type: array
                      description: List of streams
                      items:
                        type: object
                        description: Configuration for a stream
                        properties:
                          name:
                            description: The name of the stream
                            type: string
                          subNetworkRef:
                            description: The name of the sub network the stream is created for
                            default: main
                            type: string
                          type:
                            description: The type of the stream
                            type: string
                            default: Standard
                            enum:
                              - Standard
                              - Aggregate
                              - Mirror
                          reference:
                            description: When type is mirror, the name of the stream to mirror
                            type: string
                          references:
                            description: When type is aggregate, the names of the streams to aggregate
                            type: array
                            items:
                              type: string
                          config:
                            description: Config is the stream configuration.
                            properties:
                              allowDirect:
                                description:
                                  AllowDirect is a flag that if true and the stream
                                  has more than one replica, each replica will respond to
                                  direct get requests for individual messages, not only the
                                  leader.
                                type: boolean
                              allowRollup:
                                description:
                                  AllowRollup is a flag to allow the use of the
                                  Nats-Rollup header to replace all contents of a stream,
                                  or subject in a stream, with a single new message.
                                type: boolean
                              denyDelete:
                                description:
                                  DenyDelete is a flag to restrict the ability
                                  to delete messages from a stream via the API.
                                type: boolean
                              denyPurge:
                                description:
                                  DenyPurge is a flag to restrict the ability to
                                  purge messages from a stream via the API.
                                type: boolean
                              description:
                                description:
                                  Description is a human readable description of
                                  the stream.
                                type: string
                              discard:
                                default: Old
                                description:
                                  "Discard defines the behavior of discarding messages
                                  when any streams' limits have been reached. Old (default):
                                  This policy will delete the oldest messages in order to
                                  maintain the limit. For example, if MaxAge is set to one
                                  minute, the server will automatically delete messages older
                                  than one minute with this policy. New: This policy will
                                  reject new messages from being appended to the stream if
                                  it would exceed one of the limits. An extension to this
                                  policy is DiscardNewPerSubject which will apply this policy
                                  on a per-subject basis within the stream."
                                enum:
                                  - Old
                                  - New
                                type: string
                              discardNewPerSubject:
                                default: false
                                description:
                                  DiscardOldPerSubject will discard old messages
                                  per subject.
                                type: boolean
                              duplicates:
                                default: 2m0s
                                description:
                                  Duplicates defines the time window within which
                                  to track duplicate messages.
                                pattern: ^(([0-9]+[smh]){1,3})$
                                type: string
                              maxAge:
                                default: 0s
                                description:
                                  MaxAge is the maximum age of a message in the
                                  stream. Format is a string duration, e.g. 1h, 1m, 1s, 1h30m
                                  or 2h3m4s.
                                pattern: ([0-9]+h)?([0-9]+m)?([0-9]+s)?
                                type: string
                              maxBytes:
                                default: -1
                                description:
                                  MaxBytes defines how many bytes the Stream may
                                  contain. Adheres to Discard Policy, removing oldest or refusing
                                  new messages if the Stream exceeds this size.
                                format: int64
                                type: integer
                              maxConsumers:
                                default: -1
                                description:
                                  MaxConsumers defines how many Consumers can be
                                  defined for a given Stream. Define -1 for unlimited.
                                type: integer
                              maxMsgSize:
                                default: -1
                                description:
                                  MaxBytesPerSubject defines the largest message
                                  that will be accepted by the Stream.
                                format: int32
                                minimum: -1
                                type: integer
                              maxMsgs:
                                default: -1
                                description:
                                  MaxMsgs defines how many messages may be in a
                                  Stream. Adheres to Discard Policy, removing oldest or refusing
                                  new messages if the Stream exceeds this number of messages.
                                format: int64
                                type: integer
                              maxMsgsPerSubject:
                                default: -1
                                description:
                                  MaxMsgsPerSubject defines the limits how many
                                  messages in the stream to retain per subject.
                                format: int64
                                minimum: -1
                                type: integer
                              mirror:
                                description: Mirror is the mirror configuration for the stream.
                                properties:
                                  domain:
                                    description:
                                      Domain is the JetStream domain of where the
                                      origin stream exists. This is commonly used between
                                      a cluster/supercluster and a leaf node/cluster.
                                    type: string
                                  external:
                                    description: External is the external stream configuration.
                                    properties:
                                      apiPrefix:
                                        description:
                                          APIPrefix is the prefix for the API of
                                          the external stream.
                                        type: string
                                      deliverPrefix:
                                        description:
                                          DeliverPrefix is the prefix for the deliver
                                          subject of the external stream.
                                        type: string
                                    required:
                                      - apiPrefix
                                    type: object
                                  filterSubject:
                                    description:
                                      FilterSubject is an optional filter subject
                                      which will include only messages that match the subject,
                                      typically including a wildcard.
                                    type: string
                                  name:
                                    description:
                                      Name of the origin stream to source messages
                                      from.
                                    type: string
                                  startSeq:
                                    description:
                                      StartSeq is an optional start sequence the
                                      of the origin stream to start mirroring from.
                                    format: int64
                                    type: integer
                                  startTime:
                                    description:
                                      StartTime is an optional message start time
                                      to start mirroring from. Any messages that are equal
                                      to or greater than the start time will be included.
                                      The time format is RFC 3339, e.g. 2023-01-09T14:48:32Z
                                    pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
                                    type: string
                                required:
                                  - name
                                type: object
                              mirrorDirect:
                                description:
                                  MirrorDirect is a flag that if true, and the
                                  stream is a mirror, the mirror will participate in a serving
                                  direct get requests for individual messages from origin
                                  stream.
                                type: boolean
                              noAck:
                                default: false
                                description:
                                  NoAck is a flag to disable acknowledging messages
                                  that are received by the Stream.
                                type: boolean
                              placement:
                                description: Placement is the placement policy for the stream.
                                properties:
                                  cluster:
                                    description: Cluster is the name of the Jetstream cluster.
                                    type: string
                                  tags:
                                    description: Tags defines a list of server tags.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - cluster
                                type: object
                              rePublish:
                                description:
                                  Allow republish of the message after being sequenced
                                  and stored.
                                properties:
                                  destination:
                                    description:
                                      Destination is the destination subject messages
                                      will be re-published to. The source and destination
                                      must be a valid subject mapping. For information on
                                      subject mapping see https://docs.nats.io/jetstream/concepts/subjects#subject-mapping
                                    type: string
                                  headersOnly:
                                    description:
                                      HeadersOnly defines if true, that the message
                                      data will not be included in the re-published message,
                                      only an additional header Nats-Msg-Size indicating the
                                      size of the message in bytes.
                                    type: boolean
                                  source:
                                    default: ">"
                                    description:
                                      Source is an optional subject pattern which
                                      is a subset of the subjects bound to the stream. It
                                      defaults to all messages in the stream, e.g. >.
                                    type: string
                                required:
                                  - destination
                                  - source
                                type: object
                              replicas:
                                default: 1
                                description:
                                  Replicas defines how many replicas to keep for
                                  each message in a clustered JetStream.
                                maximum: 5
                                minimum: 1
                                type: integer
                              retention:
                                default: Limits
                                description:
                                  Retention defines the retention policy for the
                                  stream.
                                enum:
                                  - Limits
                                  - Interest
                                  - WorkQueue
                                type: string
                              sealed:
                                description:
                                  Sealed is a flag to prevent message deletion
                                  from  the stream  via limits or API.
                                type: boolean
                              sources:
                                description:
                                  Sources is the list of one or more sources configurations
                                  for the stream.
                                items:
                                  description:
                                    StreamSource dictates how streams can source
                                    from other streams.
                                  properties:
                                    domain:
                                      description:
                                        Domain is the JetStream domain of where
                                        the origin stream exists. This is commonly used between
                                        a cluster/supercluster and a leaf node/cluster.
                                      type: string
                                    external:
                                      description: External is the external stream configuration.
                                      properties:
                                        apiPrefix:
                                          description:
                                            APIPrefix is the prefix for the API
                                            of the external stream.
                                          type: string
                                        deliverPrefix:
                                          description:
                                            DeliverPrefix is the prefix for the
                                            deliver subject of the external stream.
                                          type: string
                                      required:
                                        - apiPrefix
                                      type: object
                                    filterSubject:
                                      description:
                                        FilterSubject is an optional filter subject
                                        which will include only messages that match the subject,
                                        typically including a wildcard.
                                      type: string
                                    name:
                                      description:
                                        Name of the origin stream to source messages
                                        from.
                                      type: string
                                    startSeq:
                                      description:
                                        StartSeq is an optional start sequence
                                        the of the origin stream to start mirroring from.
                                      format: int64
                                      type: integer
                                    startTime:
                                      description:
                                        StartTime is an optional message start
                                        time to start mirroring from. Any messages that are
                                        equal to or greater than the start time will be included.
                                        The time format is RFC 3339, e.g. 2023-01-09T14:48:32Z
                                      pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
                                      type: string
                                  required:
                                    - name
                                  type: object
                                type: array
                              storage:
                                default: File
                                description: Storage defines the storage type for stream data..
                                enum:
                                  - File
                                  - Memory
                                type: string
                              subjects:
                                description:
                                  Subjects is a list of subjects to consume, supports
                                  wildcards.
                                items:
                                  type: string
                                type: array
                              template:
                                description:
                                  Template is the owner of the template associated
                                  with this stream.
                                type: string
                            required:
                              - discard
                              - maxBytes
                              - maxConsumers
                              - maxMsgs
                              - retention
                              - storage
                            type: object
                        required:
                          - config

                    resourceConfig:
                      type: object
                      description: Defines general properties for this resource.
                      properties:
                        accountSecret:
                          description: Name of secret containing the account information
                          type: string
                        userSecret:
                          description: Name of secret containing the user information
                          type: string
                        natssecrets:
                          description: Config for provider natssecrets
                          type: object
                          properties:
                            providerConfigName:
                              description: Name of provider config to use for natssecrets
                              type: string
                        kubernetes:
                          description: Config for provider kubernetes
                          type: object
                          properties:
                            providerConfigName:
                              description: Name of provider config to use for kubernetes
                              type: string
              required:
                - parameters

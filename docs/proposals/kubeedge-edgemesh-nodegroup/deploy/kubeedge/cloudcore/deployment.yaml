apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubeedge
    kubeedge: cloudcore
  name: cloudcore
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kubeedge
      kubeedge: cloudcore
  template:
    metadata:
      labels:
        k8s-app: kubeedge
        kubeedge: cloudcore
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/edge
                    operator: DoesNotExist
      serviceAccount: cloudcore
      containers:
        - name: cloudcore
          image: kubeedge/cloudcore:v1.11.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 10000
              name: cloudhub
              protocol: TCP
            - containerPort: 10001
              name: cloudhub-quic
              protocol: TCP
            - containerPort: 10002
              name: cloudhub-https
              protocol: TCP
            - containerPort: 10003
              name: cloudstream
              protocol: TCP
            - containerPort: 10004
              name: tunnelport
              protocol: TCP
          volumeMounts:
            - name: conf
              mountPath: /etc/kubeedge/config
            - name: ca
              mountPath: /etc/kubeedge/ca
            - name: certs
              mountPath: /etc/kubeedge/certs
            - name: sock
              mountPath: /var/lib/kubeedge
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
      volumes:
        - name: conf
          configMap:
            name: cloudcore
        - name: ca
          secret:
            secretName: kubeedge-ca
            items:
              - key: tls.crt
                path: rootCA.crt
              - key: tls.key
                path: rootCA.key
        - name: certs
          secret:
            secretName: kubeedge-certs
            items:
              - key: server.crt
                path: server.crt
              - key: server.key
                path: server.key
        - name: sock
          hostPath:
            path: /var/lib/kubeedge
            type: DirectoryOrCreate
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          value: "true"
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          value: "true"
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          value: "true"
